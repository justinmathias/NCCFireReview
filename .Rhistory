axis.title.y = element_text(color = "black", size = 17, family = "Arial"),
axis.text = element_text(color = "black", size = 16, family = "Arial"),
panel.border = element_rect(colour = "black", fill=NA, size=.9),
plot.tag = element_text(family = "Arial", size = 18, face = "bold")) +
xlab("Longitude") +
ylab("Latitude") +
guides(legend(ncol = 2))
####Map of belowground papers----
ggplot() + #Plot
borders("world", colour = "gray40", fill = "gray99") +
theme_few() +
coord_fixed(1.2) +
geom_point(aes(x = Lon, y = Lat, color = Biome),
data = belowground,
alpha = 0.65) +
scale_size_continuous(range = c(1, 8),
breaks = c(5, 10, 15)) +
theme(legend.position = "bottom",
legend.title = element_text(size = 11, family = "Arial"),
legend.text = element_text(size = 11, family = "Arial"),
legend.background=element_blank(),
axis.title.x = element_text(color = "black", size = 17, family = "Arial"),
axis.title.y = element_text(color = "black", size = 17, family = "Arial"),
axis.text = element_text(color = "black", size = 16, family = "Arial"),
panel.border = element_rect(colour = "black", fill=NA, size=.9),
plot.tag = element_text(family = "Arial", size = 18, face = "bold")) +
xlab("Longitude") +
ylab("Latitude") +
guides(fill=guide_legend(ncol = 2))
####Map of belowground papers----
ggplot() + #Plot
borders("world", colour = "gray40", fill = "gray99") +
theme_few() +
coord_fixed(1.2) +
geom_point(aes(x = Lon, y = Lat, color = Biome),
data = belowground,
alpha = 0.65) +
scale_size_continuous(range = c(1, 8),
breaks = c(5, 10, 15)) +
theme(legend.position = "bottom",
legend.title = element_text(size = 11, family = "Arial"),
legend.text = element_text(size = 11, family = "Arial"),
legend.background=element_blank(),
axis.title.x = element_text(color = "black", size = 17, family = "Arial"),
axis.title.y = element_text(color = "black", size = 17, family = "Arial"),
axis.text = element_text(color = "black", size = 16, family = "Arial"),
panel.border = element_rect(colour = "black", fill=NA, size=.9),
plot.tag = element_text(family = "Arial", size = 18, face = "bold")) +
xlab("Longitude") +
ylab("Latitude") +
guides(fill=guide_legend(ncol = 2,byrow=TRUE))
####Map of belowground papers----
ggplot() + #Plot
borders("world", colour = "gray40", fill = "gray99") +
theme_few() +
coord_fixed(1.2) +
geom_point(aes(x = Lon, y = Lat, color = Biome),
data = belowground,
alpha = 0.65) +
scale_size_continuous(range = c(1, 8),
breaks = c(5, 10, 15)) +
theme(legend.position = "bottom",
legend.title = element_text(size = 11, family = "Arial"),
legend.text = element_text(size = 11, family = "Arial"),
legend.background=element_blank(),
axis.title.x = element_text(color = "black", size = 17, family = "Arial"),
axis.title.y = element_text(color = "black", size = 17, family = "Arial"),
axis.text = element_text(color = "black", size = 16, family = "Arial"),
panel.border = element_rect(colour = "black", fill=NA, size=.9),
plot.tag = element_text(family = "Arial", size = 18, face = "bold")) +
xlab("Longitude") +
ylab("Latitude") +
guides(fill=guide_legend(nrow = 5,byrow=TRUE))
####Map of belowground papers----
ggplot() + #Plot
borders("world", colour = "gray40", fill = "gray99") +
theme_few() +
coord_fixed(1.2) +
geom_point(aes(x = Lon, y = Lat, color = Biome),
data = belowground,
alpha = 0.65) +
scale_size_continuous(range = c(1, 8),
breaks = c(5, 10, 15)) +
theme(legend.position = "bottom",
legend.title = element_text(size = 11, family = "Arial"),
legend.text = element_text(size = 11, family = "Arial"),
legend.background=element_blank(),
axis.title.x = element_text(color = "black", size = 17, family = "Arial"),
axis.title.y = element_text(color = "black", size = 17, family = "Arial"),
axis.text = element_text(color = "black", size = 16, family = "Arial"),
panel.border = element_rect(colour = "black", fill=NA, size=.9),
plot.tag = element_text(family = "Arial", size = 18, face = "bold")) +
xlab("Longitude") +
ylab("Latitude")
####Map of belowground papers----
ggplot() + #Plot
borders("world", colour = "gray40", fill = "gray99") +
theme_few() +
coord_fixed(1.2) +
geom_point(aes(x = Lon, y = Lat, color = Biome),
data = belowground,
alpha = 0.65) +
scale_size_continuous(range = c(1, 8),
breaks = c(5, 10, 15)) +
theme(legend.position = "right",
legend.title = element_text(size = 11, family = "Arial"),
legend.text = element_text(size = 11, family = "Arial"),
legend.background=element_blank(),
axis.title.x = element_text(color = "black", size = 17, family = "Arial"),
axis.title.y = element_text(color = "black", size = 17, family = "Arial"),
axis.text = element_text(color = "black", size = 16, family = "Arial"),
panel.border = element_rect(colour = "black", fill=NA, size=.9),
plot.tag = element_text(family = "Arial", size = 18, face = "bold")) +
xlab("Longitude") +
ylab("Latitude")
####Map of belowground papers----
ggplot() + #Plot
borders("world", colour = "gray40", fill = "gray99") +
theme_few() +
coord_fixed(1.2) +
geom_point(aes(x = Lon, y = Lat, color = Biome),
data = belowground,
alpha = 0.65) +
scale_size_continuous(range = c(1, 8),
breaks = c(5, 10, 15)) +
theme(legend.position = "right",
legend.title = element_text(size = 11, family = "Arial"),
legend.text = element_text(size = 11, family = "Arial"),
legend.background=element_blank(),
axis.title.x = element_text(color = "black", size = 17, family = "Arial"),
axis.title.y = element_text(color = "black", size = 17, family = "Arial"),
axis.text = element_text(color = "black", size = 16, family = "Arial"),
panel.border = element_rect(colour = "black", fill=NA, size=.9),
plot.tag = element_text(family = "Arial", size = 18, face = "bold")) +
xlab("Longitude") +
ylab("Latitude") +
guides(color = guide_legend(override.aes = list(size=3, alpha = 0.8), nrow = 4))
####Map of belowground papers----
ggplot() + #Plot
borders("world", colour = "gray40", fill = "gray99") +
theme_few() +
coord_fixed(1.2) +
geom_point(aes(x = Lon, y = Lat, color = Biome),
data = belowground,
alpha = 0.65) +
scale_size_continuous(range = c(1, 8),
breaks = c(5, 10, 15)) +
theme(legend.position = "bottom",
legend.title = element_text(size = 11, family = "Arial"),
legend.text = element_text(size = 11, family = "Arial"),
legend.background=element_blank(),
axis.title.x = element_text(color = "black", size = 17, family = "Arial"),
axis.title.y = element_text(color = "black", size = 17, family = "Arial"),
axis.text = element_text(color = "black", size = 16, family = "Arial"),
panel.border = element_rect(colour = "black", fill=NA, size=.9),
plot.tag = element_text(family = "Arial", size = 18, face = "bold")) +
xlab("Longitude") +
ylab("Latitude") +
guides(color = guide_legend(override.aes = list(size=3, alpha = 0.8), ncol = 2))
####Map of belowground papers----
ggplot() + #Plot
borders("world", colour = "gray40", fill = "gray99") +
theme_map() +
coord_fixed(1.2) +
geom_point(aes(x = Lon, y = Lat, color = Biome),
data = belowground,
alpha = 0.65) +
scale_size_continuous(range = c(1, 8),
breaks = c(5, 10, 15)) +
theme(legend.position = "bottom",
legend.title = element_text(size = 11, family = "Arial"),
legend.text = element_text(size = 11, family = "Arial"),
legend.background=element_blank(),
axis.title.x = element_text(color = "black", size = 17, family = "Arial"),
axis.title.y = element_text(color = "black", size = 17, family = "Arial"),
axis.text = element_text(color = "black", size = 16, family = "Arial"),
panel.border = element_rect(colour = "black", fill=NA, size=.9),
plot.tag = element_text(family = "Arial", size = 18, face = "bold")) +
xlab("Longitude") +
ylab("Latitude") +
guides(color = guide_legend(override.aes = list(size=3, alpha = 0.8), ncol = 2))
####Map of belowground papers----
ggplot() + #Plot
borders("world", colour = "gray40", fill = "gray99") +
theme_article() +
coord_fixed(1.2) +
geom_point(aes(x = Lon, y = Lat, color = Biome),
data = belowground,
alpha = 0.65) +
scale_size_continuous(range = c(1, 8),
breaks = c(5, 10, 15)) +
theme(legend.position = "bottom",
legend.title = element_text(size = 11, family = "Arial"),
legend.text = element_text(size = 11, family = "Arial"),
legend.background=element_blank(),
axis.title.x = element_text(color = "black", size = 17, family = "Arial"),
axis.title.y = element_text(color = "black", size = 17, family = "Arial"),
axis.text = element_text(color = "black", size = 16, family = "Arial"),
panel.border = element_rect(colour = "black", fill=NA, size=.9),
plot.tag = element_text(family = "Arial", size = 18, face = "bold")) +
xlab("Longitude") +
ylab("Latitude") +
guides(color = guide_legend(override.aes = list(size=3, alpha = 0.8), ncol = 2))
####Map of belowground papers----
ggplot() + #Plot
borders("world", colour = "gray40", fill = "gray99") +
theme_article() +
coord_fixed(1.2) +
geom_point(aes(x = Lon, y = Lat, color = Biome),
data = belowground,
alpha = 0.65,
size = 1) +
scale_size_continuous(range = c(1, 8),
breaks = c(5, 10, 15)) +
theme(legend.position = "bottom",
legend.title = element_text(size = 11, family = "Arial"),
legend.text = element_text(size = 11, family = "Arial"),
legend.background=element_blank(),
axis.title.x = element_text(color = "black", size = 17, family = "Arial"),
axis.title.y = element_text(color = "black", size = 17, family = "Arial"),
axis.text = element_text(color = "black", size = 16, family = "Arial"),
panel.border = element_rect(colour = "black", fill=NA, size=.9),
plot.tag = element_text(family = "Arial", size = 18, face = "bold")) +
xlab("Longitude") +
ylab("Latitude") +
guides(color = guide_legend(override.aes = list(size=3, alpha = 0.8), ncol = 2))
####Map of belowground papers----
ggplot() + #Plot
borders("world", colour = "gray40", fill = "gray99") +
theme_article() +
coord_fixed(1.2) +
geom_point(aes(x = Lon, y = Lat, color = Biome),
data = belowground,
alpha = 0.65,
size = 2) +
scale_size_continuous(range = c(1, 8),
breaks = c(5, 10, 15)) +
theme(legend.position = "bottom",
legend.title = element_text(size = 11, family = "Arial"),
legend.text = element_text(size = 11, family = "Arial"),
legend.background=element_blank(),
axis.title.x = element_text(color = "black", size = 17, family = "Arial"),
axis.title.y = element_text(color = "black", size = 17, family = "Arial"),
axis.text = element_text(color = "black", size = 16, family = "Arial"),
panel.border = element_rect(colour = "black", fill=NA, size=.9),
plot.tag = element_text(family = "Arial", size = 18, face = "bold")) +
xlab("Longitude") +
ylab("Latitude") +
guides(color = guide_legend(override.aes = list(size=3, alpha = 0.8), ncol = 2))
install.packages("shinydashboard")
## ui.R ##
library(shinydashboard)
libraries(c("terra", "tidyverse", "ggsci", "ggthemes", "RColorBrewer", "measurements", "stringr", "rayshader", "egg", "rgdal", "openxlsx", "shinydashboard"))
dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
install.packages("shiny")
libraries(c("terra", "tidyverse", "ggsci", "ggthemes", "RColorBrewer", "measurements", "stringr", "rayshader", "egg", "rgdal", "openxlsx", "shiny", "shinydashboard"))
library(shiny)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) { }
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Nature Climate Change Review"),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) { }
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Nature Climate Change Review",
titleWidth = 500),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) { }
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Nature Climate Change Review",
titleWidth = 400),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) { }
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Nature Climate Change Review",
titleWidth = 350),#Width in pixels
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) { }
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Nature Climate Change Review",
titleWidth = 300),#Width in pixels
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) { }
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Nature Climate Change Review",
titleWidth = 325),#Width in pixels
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) { }
shinyApp(ui, server)
## app.R ##
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Basic dashboard"),
dashboardSidebar(),
dashboardBody(
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
)
)
server <- function(input, output) {
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Basic dashboard"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Widgets", tabName = "widgets", icon = icon("th"))
)
),
dashboardBody(
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
)
)
ui <- dashboardPage(
dashboardHeader(title = "Nature Climate Change Review",
titleWidth = 325),#Width in pixels
dashboardSidebar(width = 325),
dashboardBody()
)
server <- function(input, output) { }
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Nature Climate Change Review",
titleWidth = 325),#Width in pixels
dashboardSidebar(width = 325),
dashboardBody()
skin = "purlpe"
ui <- dashboardPage(
dashboardHeader(title = "Nature Climate Change Review",
titleWidth = 325),#Width in pixels
dashboardSidebar(width = 325),
dashboardBody()
skin = "purple"
ui <- dashboardPage(
dashboardHeader(title = "Nature Climate Change Review",
titleWidth = 325),#Width in pixels
dashboardSidebar(width = 325),
dashboardBody()
skin = "purple"
ui <- dashboardPage(
dashboardHeader(title = "Nature Climate Change Review",
titleWidth = 325),#Width in pixels
dashboardSidebar(width = 325),
dashboardBody(),
skin = "purple"
)
server <- function(input, output) { }
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Nature Climate Change Review",
titleWidth = 325),#Width in pixels
dashboardSidebar(width = 325),
dashboardBody(),
skin = "#0f90b0"
)
ui <- dashboardPage(
dashboardHeader(title = "Nature Climate Change Review",
titleWidth = 325),#Width in pixels
dashboardSidebar(width = 325),
dashboardBody(),
skin = "green"
)
server <- function(input, output) { }
shinyApp(ui, server)
## Only run examples in interactive R sessions
if (interactive()) {
ui <- fluidPage(
checkboxInput("somevalue", "Some value", FALSE),
verbatimTextOutput("value")
)
server <- function(input, output) {
output$value <- renderText({ input$somevalue })
}
shinyApp(ui, server)
}
# Create ui
ui <- fluidPage(
numericInput('bzc','bzc',value=2),
numericInput('bzm','bzm',value=2),
checkboxInput('change_sign','Change sign'),
textOutput('text')
)
server <- function(input, output) {
output$text <- renderText({
bzc = ifelse(input$change_sign,-1,1) * input$bzc
bzm = input$bzm
paste0('bzc: ', bzc, ', bzm: ', bzm)
})
}
shinyApp(ui = ui, server = server)
## Only run examples in interactive R sessions
if (interactive()) {
ui <- fluidPage(
checkboxGroupInput("variable", "Variables to show:",
c("Cylinders" = "cyl",
"Transmission" = "am",
"Gears" = "gear")),
tableOutput("data")
)
server <- function(input, output, session) {
output$data <- renderTable({
mtcars[, c("mpg", input$variable), drop = FALSE]
}, rownames = TRUE)
}
shinyApp(ui, server)
ui <- fluidPage(
checkboxGroupInput("icons", "Choose icons:",
choiceNames =
list(icon("calendar"), icon("bed"),
icon("cog"), icon("bug")),
choiceValues =
list("calendar", "bed", "cog", "bug")
),
textOutput("txt")
)
server <- function(input, output, session) {
output$txt <- renderText({
icons <- paste(input$icons, collapse = ", ")
paste("You chose", icons)
})
}
shinyApp(ui, server)
}
server <- function(input, output, session) {
output$data <- renderTable({
mtcars[, c("mpg", input$variable), drop = FALSE]
}, rownames = TRUE)
}
shinyApp(ui, server)
ui <- fluidPage(
checkboxGroupInput("icons", "Choose icons:",
choiceNames =
list(icon("calendar"), icon("bed"),
icon("cog"), icon("bug")),
choiceValues =
list("calendar", "bed", "cog", "bug")
),
textOutput("txt")
)
server <- function(input, output, session) {
output$txt <- renderText({
icons <- paste(input$icons, collapse = ", ")
paste("You chose", icons)
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Nature Climate Change Review",
titleWidth = 325),#Width in pixels
dashboardSidebar(width = 325),
dashboardBody(),
skin = "green"
)
server <- function(input, output) { }
shinyApp(ui, server)
## NCCapp.R ##
ui <- dashboardPage(
dashboardHeader(title = "Nature Climate Change Review",
titleWidth = 325),#Width in pixels
dashboardSidebar(width = 325),
dashboardBody(),
skin = "green"
)
server <- function(input, output) { }
shinyApp(ui, server)
